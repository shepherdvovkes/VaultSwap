server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: user-service-cb
                fallbackUri: forward:/fallback/user
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        - id: trading-service
          uri: lb://trading-service
          predicates:
            - Path=/api/v1/trading/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: trading-service-cb
                fallbackUri: forward:/fallback/trading
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
        
        - id: wallet-service
          uri: lb://wallet-service
          predicates:
            - Path=/api/v1/wallets/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: wallet-service-cb
                fallbackUri: forward:/fallback/wallet
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        - id: analytics-service
          uri: lb://analytics-service
          predicates:
            - Path=/api/v1/analytics/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: analytics-service-cb
                fallbackUri: forward:/fallback/analytics
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                redis-rate-limiter.requestedTokens: 1
        
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/v1/notifications/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: notification-service-cb
                fallbackUri: forward:/fallback/notification
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
                redis-rate-limiter.requestedTokens: 1
        
        # Haskell Services
        - id: security-service
          uri: lb://security-service
          predicates:
            - Path=/api/v1/security/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: security-service-cb
                fallbackUri: forward:/fallback/security
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
        
        - id: mev-protection-service
          uri: lb://mev-protection-service
          predicates:
            - Path=/api/v1/mev/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: mev-protection-service-cb
                fallbackUri: forward:/fallback/mev
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        - id: economic-analysis-service
          uri: lb://economic-analysis-service
          predicates:
            - Path=/api/v1/economic/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: economic-analysis-service-cb
                fallbackUri: forward:/fallback/economic
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                redis-rate-limiter.requestedTokens: 1
        
        # Rust Services
        - id: solana-gateway-service
          uri: lb://solana-gateway-service
          predicates:
            - Path=/api/v1/solana/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: solana-gateway-service-cb
                fallbackUri: forward:/fallback/solana
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                redis-rate-limiter.requestedTokens: 1
        
        - id: cross-chain-service
          uri: lb://cross-chain-service
          predicates:
            - Path=/api/v1/cross-chain/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: cross-chain-service-cb
                fallbackUri: forward:/fallback/cross-chain
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                redis-rate-limiter.requestedTokens: 1
        
        - id: oracle-service
          uri: lb://oracle-service
          predicates:
            - Path=/api/v1/oracle/**
          filters:
            - name: AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: oracle-service-cb
                fallbackUri: forward:/fallback/oracle
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 60
                redis-rate-limiter.requestedTokens: 1

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Consul Configuration
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      discovery:
        enabled: true
        register: true
        health-check-interval: 10s
        health-check-critical-timeout: 30s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:development}

# Logging Configuration
logging:
  level:
    com.ultrana: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:ultrana-secret-key-for-jwt-token-generation-and-validation}
  expiration: 86400000 # 24 hours

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      trading-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      wallet-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      analytics-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      notification-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      security-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      mev-protection-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      economic-analysis-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      solana-gateway-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      cross-chain-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      oracle-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
