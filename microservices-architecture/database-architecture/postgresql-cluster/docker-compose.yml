version: '3.8'

services:
  # PostgreSQL Primary Database
  postgres-primary:
    image: postgres:15-alpine
    container_name: postgres-primary
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicator_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init-scripts:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c wal_level=replica
      -c max_wal_senders=3
      -c max_replication_slots=3
      -c hot_standby=on
      -c archive_mode=on
      -c archive_command='test ! -f /backup/wal/%f && cp %p /backup/wal/%f'
    networks:
      - postgres-cluster

  # PostgreSQL Read Replica 1 (Analytics)
  postgres-replica-1:
    image: postgres:15-alpine
    container_name: postgres-replica-1
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      PGUSER: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-replica-1-data:/var/lib/postgresql/data
      - ./replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    command: >
      bash -c "
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U replicator -v -P -W
        do
          echo 'Waiting for primary to connect...'
          sleep 1s
        done
        echo 'standby_mode = on' >> /var/lib/postgresql/data/recovery.conf
        echo 'primary_conninfo = \"host=postgres-primary port=5432 user=replicator password=replicator_password\"' >> /var/lib/postgresql/data/recovery.conf
        postgres
      "
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # PostgreSQL Read Replica 2 (Reporting)
  postgres-replica-2:
    image: postgres:15-alpine
    container_name: postgres-replica-2
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      PGUSER: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-replica-2-data:/var/lib/postgresql/data
      - ./replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    command: >
      bash -c "
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U replicator -v -P -W
        do
          echo 'Waiting for primary to connect...'
          sleep 1s
        done
        echo 'standby_mode = on' >> /var/lib/postgresql/data/recovery.conf
        echo 'primary_conninfo = \"host=postgres-primary port=5432 user=replicator password=replicator_password\"' >> /var/lib/postgresql/data/recovery.conf
        postgres
      "
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # PostgreSQL Read Replica 3 (Backup)
  postgres-replica-3:
    image: postgres:15-alpine
    container_name: postgres-replica-3
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      PGUSER: postgres
    ports:
      - "5435:5432"
    volumes:
      - postgres-replica-3-data:/var/lib/postgresql/data
      - ./replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    command: >
      bash -c "
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U replicator -v -P -W
        do
          echo 'Waiting for primary to connect...'
          sleep 1s
        done
        echo 'standby_mode = on' >> /var/lib/postgresql/data/recovery.conf
        echo 'primary_conninfo = \"host=postgres-primary port=5432 user=replicator password=replicator_password\"' >> /var/lib/postgresql/data/recovery.conf
        postgres
      "
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # PostgreSQL Standby (Disaster Recovery)
  postgres-standby:
    image: postgres:15-alpine
    container_name: postgres-standby
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      PGUSER: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres-standby-data:/var/lib/postgresql/data
      - ./standby-init.sh:/docker-entrypoint-initdb.d/standby-init.sh
    command: >
      bash -c "
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U replicator -v -P -W
        do
          echo 'Waiting for primary to connect...'
          sleep 1s
        done
        echo 'standby_mode = on' >> /var/lib/postgresql/data/recovery.conf
        echo 'primary_conninfo = \"host=postgres-primary port=5432 user=replicator password=replicator_password\"' >> /var/lib/postgresql/data/recovery.conf
        postgres
      "
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # PgBouncer Connection Pooler
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: pgbouncer
    environment:
      DATABASES_HOST: postgres-primary
      DATABASES_PORT: 5432
      DATABASES_USER: ultrana
      DATABASES_PASSWORD: ultrana_password
      DATABASES_DBNAME: ultrana_dex
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
    ports:
      - "6432:6432"
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # PostgreSQL Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ultrana.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres-cluster

  # Backup Service
  postgres-backup:
    image: postgres:15-alpine
    container_name: postgres-backup
    environment:
      POSTGRES_DB: ultrana_dex
      POSTGRES_USER: ultrana
      POSTGRES_PASSWORD: ultrana_password
      BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
    volumes:
      - ./backup-scripts:/backup-scripts
      - postgres-backup-data:/backup
    command: >
      sh -c "
        while true; do
          echo 'Starting backup at $(date)'
          /backup-scripts/backup.sh
          echo 'Backup completed at $(date)'
          sleep 86400  # 24 hours
        done
      "
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

  # Monitoring (PostgreSQL Exporter)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://ultrana:ultrana_password@postgres-primary:5432/ultrana_dex?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres-primary
    networks:
      - postgres-cluster

volumes:
  postgres-primary-data:
  postgres-replica-1-data:
  postgres-replica-2-data:
  postgres-replica-3-data:
  postgres-standby-data:
  postgres-backup-data:
  pgadmin-data:

networks:
  postgres-cluster:
    driver: bridge
